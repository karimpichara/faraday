"""add_user_empresas_table

Revision ID: 26cf50eee24a
Revises: a970465e761a
Create Date: 2025-08-08 12:08:19.429893

"""

from alembic import op
import sqlalchemy as sa
import uuid


# revision identifiers, used by Alembic.
revision = "26cf50eee24a"
down_revision = "a970465e761a"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_empresas",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("empresa_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["empresa_id"], ["empresas_externas_toa.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "empresa_id", name="uq_user_empresa"),
        sa.UniqueConstraint("uuid"),
    )
    with op.batch_alter_table("user_empresas", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_empresas_active"), ["active"], unique=False
        )

    # ### end Alembic commands ###

    # Data migration: Associate user id=1 with empresa id=1
    user_empresa_uuid = str(uuid.uuid4())
    op.execute(
        f"""
        INSERT INTO user_empresas (user_id, empresa_id, uuid, created_at, updated_at, active)
        VALUES (1, 1, '{user_empresa_uuid}', NOW(), NOW(), true);
    """
    )


def downgrade():
    # Data migration rollback: Remove user id=1 and empresa id=1 association
    op.execute(
        """
        DELETE FROM user_empresas WHERE user_id = 1 AND empresa_id = 1;
    """
    )

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_empresas", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_empresas_active"))

    op.drop_table("user_empresas")
    # ### end Alembic commands ###
